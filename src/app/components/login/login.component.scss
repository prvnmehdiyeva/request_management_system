.bg{
  position: absolute;
  background-color: rgba($color: #979797, $alpha: 0.1);
  width: 100%;
  height: 100%;
  display: flex;
    justify-content: center;
    align-items: center;

}
.login {
  background: url('/assets/bg.jpg') center/cover no-repeat; 
  height: 100vh;
  overflow: hidden;
  display: grid;
  grid-template-columns: 1fr 1fr;
  justify-items: center;
  align-items: center;
  .head{
    width: 80%;
  }
  .logo{
  width: 500px; 
  height: auto; 
  }
  .login-form{
    border: 2px solid #C5C4E3;
    width: 80%;
    border-radius: 5px;
    background-color: #8384BF;
    .btn{
      background-color: #3E406E;
      &:hover{
        background-color: #363864
      }
    }
    .form-group{
      border-radius: 5px;
      padding-bottom: 10px;
      .head-text{
        font-size: 14px;
        font-weight: 600;
      }
      ::placeholder {
        opacity: 0.5;
        color: rgb(255, 255, 255); 
        font-size: 13px;
      }
      .form-control{
        border: 2px solid #C5C4E3;
        background-color: #B5B4E9;
      }
    }
  }
}
@media screen and (max-width: 768px){
  .login {
    grid-template-columns: 1fr;
    align-items: center;
    justify-content: space-around;
    justify-items: center;
    .head{
      margin-top: 10px;
      font-size: 22px;
      text-align: center;
    }
    .logo{
      display: grid;
      align-items: center; 
      justify-items: center;
    }
    .login-form{
      width: 70%;
    }
  }
}








// 
@mixin animation($animate...) {
  $max: length($animate);
  $animations: '';
  @for $i from 1 through $max {
    $animations: #{$animations + nth($animate, $i)};
    @if $i < $max {
      $animations: #{$animations + ", "};
    }
  }
  -webkit-animation: $animations;
  -moz-animation: $animations;
  -o-animation: $animations;
  animation: $animations;
}

@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

@mixin keyframes($animationName) {
  @-webkit-keyframes #{$animationName} {
    @content;
  }
  @-moz-keyframes #{$animationName} {
    @content;
  }
  @-o-keyframes #{$animationName} {
    @content;
  }
  @keyframes #{$animationName} {
    @content;
  }
}

//theme
$yellow:#3E406E;
$black: #3E406E;
$bg: #363864;
body {
  background-color: $bg;
  font-family: 'Open Sans', sans-serif;
}

.text {
  opacity: 0;
  position: absolute;
  z-index: 7;
  text-align: left;
  margin: -50px 0 0 -150px;
  width: 300px;
  height: 100px;
  top: 50%;
  left: 50%;
  font-size: 48px;
  font-weight: 700;
  p {
    white-space: nowrap;
    overflow: hidden;
    width: 100%;
    @include animation('type .3s steps(60, end) 3.7s');
  }
  p:nth-child(2) {
    @include animation('type2 .5s steps(60, end) 3.7s');
  }
  @include animation('on .6s ease-in-out 3.7s forwards');
  
  button {
    border:0;
    opacity:0;
    background:$bg;
    color:$yellow;
    border:1px solid $bg;
    letter-spacing:2px;
    padding:.5rem 2.5rem;
    font-size:12px;
    font-weight:600;
    text-transform:uppercase;
    cursor:pointer;
    @include transition(color .5s, background-color .5s);
    @include animation('on .6s ease-in-out 4s forwards');
    &:hover {
      background:$yellow;
      color:$bg;
      border:1px solid $bg;
    }
  }
}





$teal: #494D8E;
.logo-overlay{
  margin-left: -2rem;
    margin-top: 19rem;
    animation: fadeInFromLeft 2s ease forwards;
}
@keyframes fadeInFromLeft {
  from {
      opacity: 0;
  }
  to {
      opacity: 1;
  }
}
.overlay {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    
    &.show {
        .bar {
          transform: scale(1, 1) translate3d(0,0,0);
          transform-origin: 0 0;
        }
    }

    .bar {
        position: absolute;
        width: 10.1vw;
        background: $teal;
        top: 0;
        bottom: 0;
        transform: scale(0, 1)
                   translate3d(0,0,0);
        transform-origin: 100% 100%;
        transition: transform 0.5s ease-in-out;        
        &:first-of-type {
            border-left: none;
        }
        
        $light: $teal;
        $dark: mix(black, $teal, 5%);        
        @for $x from 1 through 10 {
            &:nth-of-type(#{$x}) {
                left: ($x - 1) * 10vw;
                background: linear-gradient(to right, $light 0%, $dark 100%);
                transition-delay: 0.05s * $x;
            }
            
            $light: $dark;
            $dark: mix(black, $teal, ($x * 5%));
        }
    }
}
